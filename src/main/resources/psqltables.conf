CREATE TABLE Users
(
    id SERIAL PRIMARY KEY,
    firstName VARCHAR(30) NOT NULL,
    lastName VARCHAR(30) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    username VARCHAR(20) UNIQUE NOT NULL,
    hashCombine VARCHAR(60) NOT NULL,
    isActive BOOLEAN DEFAULT TRUE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PlaidLink
(
    id SERIAL PRIMARY KEY,
    userID INT NOT NULL,
    access_token VARCHAR(255) NOT NULL,
    item_id VARCHAR(255) NOT NULL,
    institution_name VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES Users(userID),
    UNIQUE(userID, item_id)
);

CREATE TABLE Transactions
(
    transactionId VARCHAR(255) PRIMARY KEY,
    acctId VARCHAR(255) NOT NULL,
    amount DECIMAL(10, 3) NOT NULL,
    description VARCHAR(50),
    posted Date NOT NULL,
    currencycode VARCHAR(5),
    categoryId VARCHAR(50),
    merchantName VARCHAR(75),
    pending BOOLEAN,
    authorizeddate Date NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    logo VARCHAR(100),
    FOREIGN KEY (acctId) REFERENCES Accounts(accountId),
    FOREIGN KEY (categoryId) REFERENCES Categories(id)
);

CREATE TABLE Categories
(
    categoryId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(225) NOT NULL,
    description TEXT,
    type VARCHAR(20),
    icon VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    is_custom BOOLEAN DEFAULT FALSE,
    createdby BIGINT,
    createdat TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE User_Categories
(
    id BIGSERIAL,
    userid INT NOT NULL,
    categoryid INT NOT NULL,
    createdat TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(id),
    UNIQUE(userid, categoryid),
    FOREIGN KEY (userid) REFERENCES Users(id),
    FOREIGN KEY (categoryid) REFERENCES Categories(id)
);

CREATE TABLE Transaction_Categories
(
    transactionid VARCHAR(255) NOT NULL,
    categoryid VARCHAR(255) NOT NULL,
    FOREIGN KEY (transactionid) REFERENCES Transactions(id),
    FOREIGN KEY (categoryid) REFERENCES Categories(id),
    PRIMARY KEY(transactionid, categoryid)
);

CREATE TABLE Accounts
(
    accountId VARCHAR(255) PRIMARY KEY,
    userId INT NOT NULL,
    accountName VARCHAR(50) NOT NULL,
    officialName VARCHAR(50),
    balance DECIMAL(10, 3) NOT NULL,
    type VARCHAR(20),
    subType VARCHAR(50),
    mask VARCHAR(4) NOT NULL,
    FOREIGN KEY (userId) REFERENCES Users(userId)
);
