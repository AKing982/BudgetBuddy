CREATE TABLE Users
(
    id SERIAL PRIMARY KEY,
    firstName VARCHAR(30) NOT NULL,
    lastName VARCHAR(30) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    username VARCHAR(20) UNIQUE NOT NULL,
    hashCombine VARCHAR(60) NOT NULL,
    isActive BOOLEAN DEFAULT TRUE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PlaidLink
(
    id SERIAL PRIMARY KEY,
    userID INT NOT NULL,
    access_token VARCHAR(255) NOT NULL,
    item_id VARCHAR(255) NOT NULL,
    institution_name VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES Users(userID),
    UNIQUE(userID, item_id)
);

CREATE TABLE Transactions
(
    id SERIAL PRIMARY KEY,
    acctid INT NOT NULL,
    transaction_reference_number VARCHAR(255),
    amount DECIMAL(10, 3) NOT NULL,
    description VARCHAR(50),
    posted Date NOT NULL,
    currencycode VARCHAR(5),
    categoryid VARCHAR(50),
    merchantName VARCHAR(75),
    pending BOOLEAN,
    authorizeddate Date NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    categoryname VARCHAR(255),
    categorydescription VARCHAR(255),
    logo VARCHAR(100),
    FOREIGN KEY (acctid) REFERENCES Accounts(id)
);

CREATE TABLE Categories
(
    id SERIAL PRIMARY KEY,
    category_ref_number VARCHAR(225),
    categoryname VARCHAR(225) NOT NULL,
    categorydescription VARCHAR(225)
);

CREATE TABLE Transaction_Categories
(
    transactionid INT NOT NULL,
    categoryid INT NOT NULL,
    FOREIGN KEY (transactionid) REFERENCES Transactions(id),
    FOREIGN KEY (categoryid) REFERENCES Categories(id),
    PRIMARY KEY(transactionid, categoryid)
);

CREATE TABLE Accounts
(
    id SERIAL PRIMARY KEY,
    account_reference_number VARCHAR(255),
    userId INT NOT NULL,
    accountName VARCHAR(50) NOT NULL,
    officialName VARCHAR(50),
    type VARCHAR(20),
    subType VARCHAR(50),
    mask VARCHAR(4) NOT NULL,
    FOREIGN KEY (userId) REFERENCES Users(userId)
);
